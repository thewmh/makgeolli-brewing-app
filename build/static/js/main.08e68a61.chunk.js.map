{"version":3,"sources":["redux/reducers/errorsReducer.js","redux/reducers/loginModeReducer.js","redux/reducers/userReducer.js","redux/reducers/ingredientUnitsReducer.js","redux/reducers/recipesReducer.js","redux/reducers/adminReducer.js","redux/reducers/index.js","redux/sagas/loginSaga.js","redux/sagas/registrationSaga.js","redux/sagas/userSaga.js","redux/sagas/ingredientUnitsSaga.js","redux/sagas/recipesSaga.js","redux/sagas/index.js","components/LogOutButton/LogOutButton.js","components/Nav/Nav.js","components/Footer/Footer.js","components/LoginPage/LoginPage.js","components/RegisterPage/RegisterPage.js","components/ProtectedRoute/ProtectedRoute.js","components/AboutPage/AboutPage.js","components/UserPage/UserRecipes/UserRecipes.js","components/UserPage/UserPage.js","components/InfoPage/InfoPage.js","components/AddARecipe/AddARecipeDescription/AddARecipeDescription.js","components/HomePage/HomePage.js","components/AddARecipe/AddARecipeIngredients/AddARecipeIngredients.js","components/AddARecipe/AddARecipeInstructions/AddARecipeInstructions.js","components/AddARecipe/AddARecipe.js","components/ManageUsers/ManageUsers.js","components/ManageRecipes/ManageRecipes.js","components/RecipeGallery/RecipeGallery.js","components/RecipePage/RecipePage.js","components/SuccessPage/SuccessPage.js","components/App/App.js","index.js"],"names":["combineReducers","loginMessage","state","arguments","length","undefined","type","registrationMessage","loginMode","userReducer","action","payload","ingredientUnits","addRecipeReducer","Object","objectSpread","title","description","ingredients","instructions","console","log","newUserRecipe","userRecipes","rootReducer","errors","user","recipes","admin","loginUser","logoutUser","loginSaga","config","regenerator_default","a","wrap","_context","prev","next","put","headers","Content-Type","withCredentials","axios","post","t0","response","status","stop","_marked","_context2","_marked2","_context3","takeLatest","_marked3","registerUser","registrationSaga","registrationSaga_marked","registrationSaga_marked2","fetchUser","fetchAllUsers","editUser","deleteUser","userSaga","get","sent","data","userSaga_marked","userSaga_marked2","call","userSaga_marked3","_context4","delete","concat","_marked4","_context5","_marked5","fetchIngredientUnits","ingredientUnitsSaga","ingredientUnitsSaga_marked","ingredientUnitsSaga_marked2","fetchRecipes","getRecipeView","getUserRecipeLibrary","deleteUserRecipeFromLibrary","addNewRecipe","addRecipeToUserLibrary","recipesSaga","recipesSaga_marked","key","history","push","recipe","id","recipesSaga_marked2","recipesSaga_marked3","recipesSaga_marked4","recipesSaga_marked5","_context6","_marked6","_context7","takeEvery","_marked7","rootSaga","all","sagas_marked","connect","props","react_default","createElement","className","onClick","dispatch","to","userProfile","Link","activeClassName","src","alt","user_id","access_level","Fragment","components_LogOutButton_LogOutButton","Footer","Date","getFullYear","LoginPage","username","password","login","event","preventDefault","_this","handleInputChangeFor","propertyName","setState","defineProperty","target","value","_this2","this","role","onSubmit","htmlFor","name","onChange","Component","RegisterPage","first_name","last_name","ComponentToShow","ComponentToProtect","component","otherProps","objectWithoutProperties","Route","assign","AboutPage","href","UserRecipes","deleteRecipeFromUserProfile","confirmAlert","message","buttons","label","viewRecipe","colSpan","map","user_recipe_id","index_es","icon","reduxState","withRouter","UserPage_UserRecipes_UserRecipes","InfoPage","AddARecipeDescription","titleEdit","descriptionEdit","saveRecipeTitle","alert","editRecipeTitle","saveRecipeDescription","editRecipeDescription","handleChange","class","required","autocomplete","for","disabled","AddARecipeIngredients","quantity","i","newIngredients","ingredient","si","handleAddIngredient","handleRemoveIngredient","filter","s","clearInputFields","saveIngredientState","submitIngredients","placeholder","AddARecipeInstructions","instruction_details","newInstruction","instruction","handleAddInstruction","handleRemoveInstruction","saveInstructionState","submitInstructions","instruction_number","AddARecipe","submitNewRecipe","AddARecipe_AddARecipeDescription_AddARecipeDescription","AddARecipe_AddARecipeIngredients_AddARecipeIngredients","AddARecipe_AddARecipeInstructions_AddARecipeInstructions","ManageUsers","edit","updateUser","handleSave","handleEdit","handleDelete","renderEditButton","users","index","ManageRecipes","is_published","added_by","image","updateRecipe","RecipeGallery","path","likes","recipeData","getRecipes","then","catch","error","RecipePage","recipe_id","ingredient_name","ingredient_quantity","ingredient_measure","SuccessPage","library","add","faEye","faTrash","faEdit","faSave","App","HashRouter","components_Nav_Nav","Switch","exact","components_ProtectedRoute_ProtectedRoute","UserPage","render","components_Footer_Footer","sagaMiddleware","createSagaMiddleware","middlewareList","store","createStore","applyMiddleware","apply","run","ReactDOM","react_redux_es","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.08e68a61.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\n\n// loginMessage holds the string that will display\n// on the login screen if there's an error\nconst loginMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_LOGIN_ERROR':\n      return '';\n    case 'LOGIN_INPUT_ERROR':\n      return 'Enter your username and password!';\n    case 'LOGIN_FAILED':\n      return 'Oops! The username and password didn\\'t match. Try again!';\n    case 'LOGIN_FAILED_NO_CODE':\n      return 'Oops! Something went wrong! Is the server running?';\n    default:\n      return state;\n  }\n};\n\n// registrationMessage holds the string that will display\n// on the registration screen if there's an error\nconst registrationMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_REGISTRATION_ERROR':\n      return '';\n    case 'REGISTRATION_INPUT_ERROR':\n      return 'Choose a username and password!';\n    case 'REGISTRATION_FAILED':\n      return 'Oops! That didn\\'t work. The username might already be taken. Try again!';\n    default:\n      return state;\n  }\n};\n\n// make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\nexport default combineReducers({\n  loginMessage,\n  registrationMessage,\n});\n","const loginMode = (state = 'login', action) => {\n    switch (action.type) {\n      case 'SET_TO_LOGIN_MODE':\n        return 'login';\n      case 'SET_TO_REGISTER_MODE':\n        return 'register';\n      default:\n        return state;\n    }\n  };\n\n// loginMode will be on the redux state at:\n// state.loginMode\n  export default loginMode;\n  ","const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.payload;\n    case 'UNSET_USER':\n      return {};\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default userReducer;\n","const ingredientUnits = (state = [], action) => {\n    switch (action.type) {\n      case 'SET_RECIPE_INGREDIENT_UNITS':\n        return action.payload;\n      default:\n        return state;\n    }\n  };\n  \n  export default ingredientUnits;\n  ","const addRecipeReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'ADD_RECIPE_TITLE':\n            return {...state, title: action.payload.title}\n        case 'ADD_RECIPE_DESCRIPTION':\n            return {...state, description: action.payload.description}\n        case 'ADD_RECIPE_INGREDIENTS':\n            return {...state, ingredients: action.payload.ingredients}\n        case 'ADD_RECIPE_INSTRUCTIONS':\n            return {...state, instructions: action.payload.instructions}\n        case 'ADD_NEW_RECIPE':\n            state = action.payload\n            break;\n        case 'SET_RECIPES':\n            return action.payload;\n        case 'SET_RECIPE_VIEW':\n            console.log(action.payload)\n            state = action.payload\n            break;\n        case 'ADD_RECIPE_TO_USER_LIBRARY':\n            return {...state, newUserRecipe: action.payload};\n        case 'SET_USER_RECIPE_LIBRARY':\n            return {userRecipes: action.payload};\n        // case 'DELETE_USER_RECIPE_FROM_LIBRARY':\n        //     return {...state, userRecipes: [action.payload]};\n      default:\n        return state;\n    }\n    console.log('state is now:', state);\n    return state;\n  };\n  \n  export default addRecipeReducer;","const userReducer = (state = [], action) => {\n    switch (action.type) {\n      case 'SET_ALL_USERS':\n        return action.payload;\n      default:\n        return state;\n    }\n  };\n  \n  // user will be on the redux state at:\n  // state.user\n  export default userReducer;\n  ","import { combineReducers } from 'redux';\nimport errors from './errorsReducer';\nimport loginMode from './loginModeReducer';\nimport user from './userReducer';\nimport ingredientUnits from './ingredientUnitsReducer';\nimport recipes from './recipesReducer';\nimport admin from './adminReducer';\n// rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\nconst rootReducer = combineReducers({\n  errors, // contains registrationMessage and loginMessage\n  loginMode, // will have a value of 'login' or 'registration' to control which screen is shown\n  user, // will have an id and username if someone is logged in\n  ingredientUnits,\n  recipes,\n  admin,\n});\n\nexport default rootReducer;\n","import { put, takeLatest, fork } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"LOGIN\" actions\nfunction* loginUser(action) {\n  try {\n    // clear any existing error on the login page\n    yield put({ type: 'CLEAR_LOGIN_ERROR' });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // send the action.payload as the body\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    yield axios.post('api/user/login', action.payload, config);\n    \n    // after the user has logged in\n    // get the user information from the server\n    yield put({type: 'FETCH_USER'});\n    yield put({type: 'FETCH_USER_PROFILE'});\n  } catch (error) {\n    console.log('Error with user login:', error);\n    if (error.response.status === 401) {\n      // The 401 is the error status sent from passport\n      // if user isn't in the database or\n      // if the username and password don't match in the database\n      yield put({ type: 'LOGIN_FAILED' });\n    } else {\n      // Got an error that wasn't a 401\n      // Could be anything, but most common cause is the server is not started\n      yield put({ type: 'LOGIN_FAILED_NO_CODE' });\n    }\n  }\n}\n\n// worker Saga: will be fired on \"LOGOUT\" actions\nfunction* logoutUser(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // when the server recognizes the user session\n    // it will end the session\n    yield axios.post('api/user/logout', config);\n\n    // now that the session has ended on the server\n    // remove the client-side user object to let\n    // the client-side code know the user is logged out\n    yield put({ type: 'UNSET_USER' });\n\n  } catch (error) {\n    console.log('Error with user logout:', error);\n  }\n}\n\nfunction* loginSaga() {\n  yield takeLatest('LOGIN', loginUser);\n  yield takeLatest('LOGOUT', logoutUser);\n}\n\nexport default loginSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"REGISTER\" actions\nfunction* registerUser(action) {\n  try {\n    // clear any existing error on the registration page\n    yield put({ type: 'CLEAR_REGISTRATION_ERROR' });\n\n    // passes the username and password from the payload to the server\n    yield axios.post('api/user/register', action.payload);\n\n    // automatically log a user in after registration\n    yield put({ type: 'LOGIN', payload: action.payload });\n    \n    // set to 'login' mode so they see the login screen\n    // after registration or after they log out\n    yield put({type: 'SET_TO_LOGIN_MODE'});\n  } catch (error) {\n      console.log('Error with user registration:', error);\n      yield put({type: 'REGISTRATION_FAILED'});\n  }\n}\n\nfunction* registrationSaga() {\n  yield takeLatest('REGISTER', registerUser);\n}\n\nexport default registrationSaga;\n","import axios from 'axios';\nimport { put, takeLatest, call } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchUser() {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // If a user is logged in, this will return their information\n    // from the server session (req.user)\n    const response = yield axios.get('api/user', config);\n    // now that the session has given us a user object\n    // with an id and username set the client-side user object to let\n    // the client-side code know the user is logged in\n    yield put({ type: 'SET_USER', payload: response.data });\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\nfunction* fetchAllUsers() {\n  console.log('Fetching all users');\n  try {\n    const response = yield axios.get('api/admin/manage-users');\n    yield put({ type: 'SET_ALL_USERS', payload: response.data });\n  } catch (error) {\n    console.log('There was an error with fetchAllUsers Saga:', error)\n  }\n}\n\nfunction* editUser(action) {\n  try {\n    yield call(axios.put, '/api/admin/edit-user', action.payload);\n    yield put( { type: 'FETCH_ALL_USERS' } );\n}\ncatch (error) {\n    console.log('there was an error with your post', error);\n}\n}\n\nfunction* deleteUser(action) {\n  try {\n    console.log(action.payload);\n    yield call(axios.delete, `/api/admin/delete-user/?user_id=${action.payload}`);\n    yield put( { type: 'FETCH_ALL_USERS' } );\n}\ncatch (error) {\n    console.log('there was an error with your DELETE', error);\n  }\n}\n\nfunction* userSaga() {\n  yield takeLatest('FETCH_USER', fetchUser);\n  yield takeLatest('FETCH_ALL_USERS', fetchAllUsers);\n  yield takeLatest('EDIT_USER', editUser);\n  yield takeLatest('REMOVE_USER', deleteUser);\n}\n\nexport default userSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_RECIPE_INGREDIENT_UNITS\" actions\nfunction* fetchIngredientUnits() {\n  try {\n    const response = yield axios.get('api/ingredient-units');\n    // this will get the ingredient measurement units for our\n    // add a recipe page\n    yield put({ type: 'SET_RECIPE_INGREDIENT_UNITS', payload: response.data });\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\nfunction* ingredientUnitsSaga() {\n  yield takeLatest('FETCH_RECIPE_INGREDIENT_UNITS', fetchIngredientUnits);\n}\n\nexport default ingredientUnitsSaga;\n","import axios from 'axios';\nimport { call, put, takeLatest, takeEvery, take, fork } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_RECIPES\" actions\nfunction* fetchRecipes() {\n  try {\n    const response = yield axios.get('/api/recipes');\n    // this will get the ingredient measurement units for our\n    // add a recipe page\n    yield put({ type: 'SET_RECIPES', payload: response.data });\n  } catch (error) {\n    console.log('Recipe get request failed', error);\n  }\n}\n\nfunction* getRecipeView(action) {\n  try {\n    const response = yield call(axios.get, `/recipe/${action.payload.key}`);\n    // this will get the recipe for our\n    // individual recipe page\n    yield put({ type: 'SET_RECIPE_VIEW', payload: response.data});\n    action.payload.history.push(`/recipe/${action.payload.key}`);\n    console.log(response.data.recipe[0].id);\n  } catch (error) {\n    console.log('Recipe get request failed', error);\n  }\n}\n\nfunction* getUserRecipeLibrary(action) {\n  try {\n    const response = yield call(axios.get, `/my-recipes`, action);\n    // console.log(action);\n    // individual recipe page\n    yield put({ type: 'SET_USER_RECIPE_LIBRARY', payload: response.data });\n    // console.log(response.data.recipe[0].id);\n  } catch (error) {\n    console.log('Recipe get request failed', error);\n  }\n}\n\nfunction* deleteUserRecipeFromLibrary(action) {\n  try {\n  yield call(axios.delete, `/my-recipes/?user_recipe_id=${action.payload}`);\n  yield put( { type: 'GET_USER_RECIPE_LIBRARY' } );\n}\ncatch (error) {\n  console.log('there was an error with your DELETE', error);\n}\n}\n\nfunction* addNewRecipe(action) {\n    try {\n    yield call(axios.post, '/api/add-a-recipe', action.payload);\n    yield put( { type: 'SET_RECIPES' } );\n    yield put( { type: 'GET_USER_RECIPE_LIBRARY' } );\n}\ncatch (error) {\n    console.log('there was an error with your post', error);\n}\n}\n\nfunction* addRecipeToUserLibrary(action) {\n  try {\n    yield call(axios.post, '/user/recipes', action.payload);\n    yield put( { type: 'GET_USER_RECIPE_LIBRARY' } );\n  }\n  catch (error){\n  console.log('there was an error with your post', error);}\n}\n\nfunction* recipesSaga() {\n  yield takeEvery('FETCH_RECIPES', fetchRecipes);\n  yield takeEvery('ADD_NEW_RECIPE', addNewRecipe);\n  yield takeEvery('GET_RECIPE_VIEW', getRecipeView);\n  yield takeEvery('ADD_RECIPE_TO_USER_LIBRARY', addRecipeToUserLibrary);\n  yield takeEvery('GET_USER_RECIPE_LIBRARY', getUserRecipeLibrary);\n  yield takeEvery('DELETE_USER_RECIPE_FROM_LIBRARY', deleteUserRecipeFromLibrary);\n}\n\nexport default recipesSaga;\n","import { all } from 'redux-saga/effects';\nimport loginSaga from './loginSaga';\nimport registrationSaga from './registrationSaga';\nimport userSaga from './userSaga';\nimport ingredientUnitsSaga from './ingredientUnitsSaga';\nimport recipesSaga from './recipesSaga';\n\n// rootSaga is the primary saga.\n// It bundles up all of the other sagas so our project can use them.\n// This is imported in index.js as rootSaga\n\n// some sagas trigger other sagas, as an example\n// the registration triggers a login\n// and login triggers setting the user\nexport default function* rootSaga() {\n  yield all([\n    loginSaga(),\n    registrationSaga(),\n    userSaga(),\n    ingredientUnitsSaga(),\n    recipesSaga(),\n  ]);\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst LogOutButton = props => (\n  <button\n    // This button shows up in multiple locations and is styled differently\n    // because it's styled differently depending on where it is used, the className\n    // is passed to it from it's parents through React props\n    className={props.className}\n    onClick={() => props.dispatch({ type: 'LOGOUT'})}\n    to=\"/\"\n  >\n    Log Out\n  </button>\n);\n\n// This component doesn't need 'mapStateToProps'\n// because it doesn't care what the current state is.\n// No matter what the redux state is, this button will always be a log out button\n// this component still needs 'connect' though, because it is going to dispatch a redux action\nexport default connect()(LogOutButton);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport LogOutButton from '../LogOutButton/LogOutButton';\nimport './Nav.css';\n\nconst Nav = (props) => (\n  <div className=\"nav\">\n    <Link to=\"/\" activeClassName=\"active-link\">\n      {/* <h2 className=\"nav-title\">막걸리</h2> */}\n      <img src=\"./mak-logo-b.png\" alt=\"막\" className=\"막\"/>\n    </Link><br/>\n    <div className=\"nav-right\">\n      <Link className=\"nav-link\" to=\"/\" activeClassName=\"active-link\">\n        {/* Show this link if they are logged in or not,\n        but call this link 'Home' if they are logged in,\n        and call this link 'Login / Register' if they are not */}\n        Recipe Gallery\n      </Link>\n      {/* Show the link to the info page and the logout button if the user is logged in */}\n      <Link className=\"nav-link\" to=\"/user\" activeClassName=\"active-link\">\n          {props.user.user_id ? 'User Profile' : 'Login / Register'}\n          </Link>\n      {(props.user.access_level <= 2) ?\n      (<>\n      <Link className=\"nav-link\" to=\"/add-a-recipe\" activeClassName=\"active-link\">\n      Add a Recipe\n      </Link>\n      </>\n      ) : (<></>)}\n      {(props.user.access_level === 1) ?\n      (<>\n      <Link className=\"nav-link\" to=\"/admin/manage-users\" activeClassName=\"active-link\">\n      Manage Users\n      </Link>\n      <Link className=\"nav-link\" to=\"/admin/manage-recipes\" activeClassName=\"active-link\">\n      Manage Recipes\n      </Link>\n      </>\n      ) : (<></>)}\n      {/* Always show this link since the about page is not protected */}\n      <Link className=\"nav-link\" to=\"/about\" activeClassName=\"active-link\">\n        About\n      </Link>\n      {props.user.user_id && (\n        <>\n          <LogOutButton className=\"nav-link\" to=\"/\"></LogOutButton>\n        </>\n      )}\n    </div>\n  </div>\n);\n\n// Instead of taking everything from state, we just want the user\n// object to determine if they are logged in\n// if they are logged in, we show them a few more links \n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user }) => ({ user });\nconst mapStateToProps = state => ({\n  user: state.user,\n  userProfile: state.user.userProfile\n});\n\nexport default connect(mapStateToProps)(Nav);\n","import React from 'react';\nimport './Footer.css'\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\nconst Footer = () => (\n  <footer>\n    {/* Made with &#9829; by William Harrison <br /> */}\n    &copy; <strong>막</strong> {(new Date().getFullYear())}\n  </footer>\n);\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass LoginPage extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  login = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'LOGIN',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      });\n    } else {\n      this.props.dispatch({ type: 'LOGIN_INPUT_ERROR' });\n    }\n  } // end login\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"login-div\">\n        {this.props.errors.loginMessage && (\n          <h2\n            className=\"alert\"\n            role=\"alert\"\n          >\n            {this.props.errors.loginMessage}\n          </h2>\n        )}\n        <form onSubmit={this.login}>\n          <h1>Login</h1>\n          <div>\n            <label htmlFor=\"username\">\n              Username:\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.handleInputChangeFor('username')}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"password\">\n              Password:\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleInputChangeFor('password')}\n              />\n            </label>\n          </div>\n          <div>\n            <input\n              className=\"log-in\"\n              type=\"submit\"\n              name=\"submit\"\n              value=\"Log In\"\n            />\n          </div>\n        </form>\n        <center>\n          <button\n            type=\"button\"\n            className=\"link-button\"\n            onClick={() => {this.props.dispatch({type: 'SET_TO_REGISTER_MODE'})}}\n          >\n            Register\n          </button>\n        </center>\n      </div>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = state => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps)(LoginPage);\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\n\nclass RegisterPage extends Component {\n  state = {\n    username: '',\n    password: '',\n    first_name: '',\n    last_name: '',\n  };\n\n  registerUser = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password && this.state.first_name && this.state.last_name) {\n      this.props.dispatch({\n        type: 'REGISTER',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n          first_name: this.state.first_name,\n          last_name: this.state.last_name,\n        },\n      });\n    } else {\n      this.props.dispatch({type: 'REGISTRATION_INPUT_ERROR'});\n    }\n  } // end registerUser\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"register-div\">\n        {this.props.errors.registrationMessage && (\n          <h2\n            className=\"alert\"\n            role=\"alert\"\n          >\n            {this.props.errors.registrationMessage}\n          </h2>\n        )}\n        <form onSubmit={this.registerUser}>\n          <h1>Register User</h1>\n          <div>\n            <label htmlFor=\"first_name\">\n              First Name:\n              <input\n                type=\"text\"\n                name=\"first_name\"\n                value={this.state.first_name}\n                onChange={this.handleInputChangeFor('first_name')}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"last_name\">\n              Last Name:\n              <input\n                type=\"text\"\n                name=\"last_name\"\n                value={this.state.last_name}\n                onChange={this.handleInputChangeFor('last_name')}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"username\">\n              Username:\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.handleInputChangeFor('username')}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"password\">\n              Password:\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleInputChangeFor('password')}\n              />\n            </label>\n          </div>\n          <div>\n            <input\n              className=\"register\"\n              type=\"submit\"\n              name=\"submit\"\n              value=\"Register\"\n            />\n          </div>\n        </form>\n        <center>\n          <button\n            type=\"button\"\n            className=\"link-button\"\n            onClick={() => {this.props.dispatch({type: 'SET_TO_LOGIN_MODE'})}}\n          >\n            Login\n          </button>\n        </center>\n      </div>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = state => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps)(RegisterPage);\n\n","import React from 'react';\nimport {Route} from 'react-router-dom'\nimport {connect} from 'react-redux';\nimport LoginPage from '../LoginPage/LoginPage';\nimport RegisterPage from '../RegisterPage/RegisterPage';\n\n// A Custom Wrapper Component -- This will keep our code DRY.\n// Responsible for watching redux state, and returning an appropriate component\n// API for this component is the same as a regular route\n\n// THIS IS NOT SECURITY! That must be done on the server\n// A malicious user could change the code and see any view\n// so your server-side route must implement real security\n// by checking req.isAuthenticated for authentication\n// and by checking req.user for authorization\n\nconst ProtectedRoute = (props) => {\n  // Using destructuring, this takes ComponentToProtect from component\n  // prop and grabs all other props to pass them along to Route\n  const {\n    // Alias prop 'component' as 'ComponentToProtect'\n    component: ComponentToProtect,\n    user,\n    loginMode,\n    ...otherProps\n  } = props;\n\n  let ComponentToShow;\n\n  if(user.user_id) {\n    // if the user is logged in (only logged in users have ids)\n    // show the component that is protected\n    ComponentToShow = ComponentToProtect;\n  } else if (loginMode === 'login') {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'login', show the LoginPage\n    ComponentToShow = LoginPage;\n  } else {\n    // the the user is not logged in and the mode is not 'login'\n    // show the RegisterPage\n    ComponentToShow = RegisterPage;\n  }\n\n  // We return a Route component that gets added to our list of routes\n  return (\n      <Route\n        // all props like 'exact' and 'path' that were passed in\n        // are now passed along to the 'Route' Component\n        {...otherProps}\n        component={ComponentToShow}\n      />\n  )\n}\n\n// Instead of taking everything from state, we just want the user and loginMode\n// to determine which page we should show the user\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user, loginMode }) => ({ user, loginMode });\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    loginMode: state.loginMode,\n  }\n}\n\nexport default connect(mapStateToProps)(ProtectedRoute)\n\n\n","import React from 'react';\nimport './AboutPage.css';\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\nconst AboutPage = () => (\n  <div>\n    <div className=\"about-page\">\n      <h1>\n        About 막\n      </h1>\n      <h3>According to Wikipedia:</h3>\n      <blockquote><p>Makgeolli (Korean: 막걸리, [mak.k͈ʌl.li]), sometimes anglicized to makkoli (/ˈmækəli/,[1] MAK-ə-lee), is a Korean alcoholic beverage. The milky, off-white and lightly sparkling rice wine has a slight viscosity that tastes slightly sweet, tangy, bitter, and astringent. Chalky sediment gives it a cloudy appearance.\n      As a low proof drink of six to nine percent alcohol by volume, it is often considered a happy, communal beverage. In Korea, makgeolli is often unpasteurized, and the wine continues to mature in the bottle. Because of the short shelf life of unpasteurized \"draft\" makgeolli, many exported makgeolli undergo pasteurization, which deprives the beverage of complex enzymes and flavor compounds.</p></blockquote>\n      <h1>\n        Technologies Used\n      </h1>\n      <ul>\n        <li><a href=\"https://reactjs.org\">React</a></li>\n          <ul>\n            <li><a href=\"https://redux.js.org/\">Redux</a></li>\n            <li><a href=\"https://github.com/redux-saga/redux-saga\">Saga</a></li>\n          </ul>\n        <li><a href=\"https://nodejs.org\">Node.js</a></li>\n          <ul>\n            <li><a href=\"https://expressjs.com/\">Express</a></li>\n          </ul>\n        <li><a href=\"https://whatwg.org/\">HTML</a></li>\n        <li><a href=\"https://www.w3.org/standards/techs/css#w3c_all\">CSS</a></li>\n        <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript\">Javascript</a></li>\n        <li><a href=\"https://git-scm.com/\">Git</a></li>\n      </ul>\n    </div>\n\n  </div>\n);\n\nexport default AboutPage;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './UserRecipes.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { withRouter } from 'react-router';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\nclass UserRecipes extends Component {\n\n    // state = {\n    //     user_id: this.props.reduxState.user.user_id,\n    //     userRecipeData: []\n    // }\n\n    componentDidMount() {\n        this.getUserRecipeLibrary();\n        console.log('Logged in users access level is', this.props.access_level)\n        if(this.props.access_level === 1) {\n          this.props.dispatch({type: 'FETCH_ALL_USERS'})\n          }\n    }\n\n    getUserRecipeLibrary() {\n        const user_id = this.props.user_id\n        const action = {type: 'GET_USER_RECIPE_LIBRARY', user_id};\n        this.props.dispatch(action);\n        this.props.dispatch({type: 'FETCH_USER_PROFILE'});\n    }\n\n    deleteRecipeFromUserProfile = (key) => {\n        confirmAlert({\n            title: 'Do you really want to delete this recipe from your library?',\n            message: `Recipe will be removed from your account.\n                    This action is irreversible`,\n            buttons: [\n                {\n                    label: 'No, just kidding.',\n                  //   onClick: () => alert('Click No')\n                  },\n                {\n                  label: 'Yeah, it\\'s a garbage recipe.',\n                  onClick: () => {\n                    const payload = key;\n                    const action = {type: 'DELETE_USER_RECIPE_FROM_LIBRARY', payload};\n                    this.props.dispatch(action);\n                  }\n                },\n              ]\n        })\n    }\n\n    viewRecipe = (key) => (event) => {\n        this.props.dispatch({type: 'GET_RECIPE_VIEW', payload: {key: key, history: this.props.history}});\n        // console.log(key);\n        // setTimeout(() => {\n        //     this.props.history.push(`/recipe/${key}`);\n        // }, 300);\n  }\n\n    render() {\n        return (\n            <div>\n            {this.props.recipes.userRecipes ? (\n                <table>\n                    <thead>\n                        <tr>\n                        <th colSpan=\"3\">{ this.props.first_name }'s Recipes</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                {this.props.recipes.userRecipes.map(recipe => (\n                    <tr key={recipe.user_recipe_id}>\n                        <td>{recipe.name}</td><td><button className=\"view-btn borderless-btn\" key={recipe.id} alt={recipe.id} onClick={this.viewRecipe(recipe.id)}><FontAwesomeIcon icon=\"eye\" /></button></td><td><button className=\"delete-btn borderless-btn\" key={recipe.user_recipe_id} onClick={() => this.deleteRecipeFromUserProfile(recipe.user_recipe_id)}><FontAwesomeIcon icon=\"trash\" /></button></td>\n                    </tr>\n                ))}\n                    </tbody>\n                </table>) : (<></>)}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = reduxState => ({\n    username: reduxState.user.username,\n    first_name: reduxState.user.first_name,\n    user_id: reduxState.user.user_id,\n    recipes: reduxState.recipes,\n    access_level: reduxState.user.access_level,\n  });\n\nexport default connect(mapStateToProps)(withRouter(UserRecipes));","import React from 'react';\nimport { connect } from 'react-redux';\nimport LogOutButton from '../LogOutButton/LogOutButton';\nimport UserRecipes from './UserRecipes/UserRecipes';\nimport './UserPage.css';\n\n// this could also be written with destructuring parameters as:\n// const UserPage = ({ user }) => (\n// and then instead of `props.user.username` you could use `user.username`\nconst UserPage = (props) => (\n  <div>\n    <h1 id=\"welcome\">\n      Welcome, { props.user.first_name }!\n    </h1>\n    {/* <p>Your ID is: {props.user.id}</p> */}\n    <UserRecipes />\n    {/* <LogOutButton className=\"log-in\"  to=\"/\"/> */}\n  </div>\n);\n\n// Instead of taking everything from state, we just want the user info.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({user}) => ({ user });\nconst mapStateToProps = reduxState => ({\n  user: reduxState.user,\n});\n\n// this allows us to use <App /> in index.js\nexport default connect(mapStateToProps)(UserPage);\n","import React from 'react';\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\nconst InfoPage = () => (\n  <div>\n    <p>\n      Info Page\n    </p>\n  </div>\n);\n\nexport default InfoPage;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass AddARecipeDescription extends Component {\n\n    state = {\n        title: '',\n        titleEdit: true,\n        description: '',\n        descriptionEdit: true,\n    }\n\n    saveRecipeTitle = (event) => {\n        event.preventDefault();\n        console.log(this.state.title);\n        if(this.state.title !== ''){\n            this.props.dispatch({type: 'ADD_RECIPE_TITLE', payload: this.state});\n            this.setState({titleEdit: false});\n        } else {\n                alert ('Please add a title for your recipe!')\n            }\n        }\n\n        editRecipeTitle = (event) => {\n            event.preventDefault();\n                this.setState({titleEdit: true, title: this.state.title});\n            }\n\n    saveRecipeDescription = (event) => {\n        event.preventDefault();\n        console.log(this.state.description);\n        if(this.state.description !== ''){\n            this.props.dispatch({type: 'ADD_RECIPE_DESCRIPTION', payload: this.state});\n            this.setState({descriptionEdit: false});\n        } else {\n                alert ('Please add a description for your recipe!')\n            }\n        }\n\n        editRecipeDescription = (event) => {\n            event.preventDefault();\n            this.setState({descriptionEdit: true});\n        }\n\n    handleChange = (event) => {\n        console.log(event.target.value);\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"add-description\">\n                {this.state.titleEdit ? <><input type=\"text\" id=\"nme\"\n                       name=\"title\" value={this.state.title} onChange={this.handleChange} class=\"question\" required autocomplete=\"off\" />\n                       <label for=\"nme\"><span>What is the name of your recipe?</span></label>\n                <button onClick={this.saveRecipeTitle}>Save Title</button></> : <><h3>Recipe Title</h3><input disabled type=\"text\" id=\"nme\"\n                       name=\"title\" value={this.state.title} onChange={this.handleChange} class=\"question\" required autocomplete=\"off\" />\n                       <button onClick={this.editRecipeTitle}>Edit Title</button></>}\n                {this.state.descriptionEdit ? <><textarea id=\"recipe-description\" name=\"description\"\n                          value={this.state.description} onChange={this.handleChange} class=\"question\" required autocomplete=\"off\" />\n                <label for=\"recipe-description\"><span>Describe your recipe</span></label>\n                <button onClick={this.saveRecipeDescription}>Save Description</button></> : <><h3>Recipe Description</h3><textarea id=\"recipe-description\" name=\"description\"\n                          value={this.state.description} onChange={this.handleChange} class=\"question\" required autocomplete=\"off\" disabled/>\n                <button onClick={this.editRecipeDescription}>Edit Description</button></> }\n            </div>\n        );\n    }\n}\nconst mapStateToProps = reduxState => ({\n    reduxState,\n  });\n\nexport default connect(mapStateToProps)(AddARecipeDescription);","import React, { Component } from 'react';\n\nclass HomePage extends Component {\n    render() {\n        return (\n            <div>\n                \n            </div>\n        );\n    }\n}\n\nexport default HomePage;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { EventEmitter } from 'events';\n\nclass AddARecipeIngredients extends Component {\n\n    state = {\n            ingredients: [{ name: '', quantity: 0, id: 1 }]\n    }\n\n    componentDidMount() {\n        const action = {type: 'FETCH_RECIPE_INGREDIENT_UNITS'};\n        this.props.dispatch(action);\n    }\n\n    handleChange = (i) => (event) => {\n        console.log(event.target.value);\n        const newIngredients = this.state.ingredients.map((ingredient, si) => {\n            if (i !== si) return ingredient;\n            return { ...ingredient, [event.target.name]: event.target.value };\n         });\n        this.setState({ ingredients: newIngredients });\n        }\n\n    // submitIngredients = (event) => {\n    //     event.preventDefault();\n    //     this.props.dispatch({ type: 'NEW_INGREDIENT', payload: this.state.newIngredient })\n    //     this.setState({\n    //         newIngredient: {\n    //             name: '',\n    //             quantity: '',\n    //             id: '',\n    //             }\n    //     });\n    //     this.clearInputFields();\n    // }\n\n    handleAddIngredient = (event) => {\n        event.preventDefault();\n        this.setState({\n          ingredients: this.state.ingredients.concat([{ name: '', quantity: 0, id: 1 }])\n        });\n      }\n\n    handleRemoveIngredient = (i) => (event) => {\n        event.preventDefault();\n        this.setState({\n            ingredients: this.state.ingredients.filter((s, si) => i !== si)\n        });\n    }\n\n    clearInputFields = () => {\n        this.setState( this.ingredient );\n    }\n\n    saveIngredientState = (event) => {\n        event.preventDefault();\n        console.log(this.state.ingredients);\n        if(this.state.ingredients[0].name !== ''){\n            this.props.dispatch({type: 'ADD_RECIPE_INGREDIENTS', payload: this.state});} else {\n                alert ('Please add ingredients for your recipe!')\n            }\n        }\n    \n\n    render() {\n        return (\n            <div className=\"add-ingredients\">\n                <h1>Enter Recipe Ingredients</h1>\n                <form onSubmit={this.submitIngredients}>\n                {this.state.ingredients.map((ingredient, i) => (\n                    <span class=\"individual-ingredient\">\n                        <input type=\"text\" name=\"name\" placeholder=\"Enter Ingredient Name\"\n                        value={ingredient.name} onChange={this.handleChange(i)} class=\"ingredient-input\"/>\n\n                        <input type=\"number\" name=\"quantity\" placeholder=\"Enter Ingredient Quantity\"\n                        value={ingredient.quantity} onChange={this.handleChange(i)} class=\"ingredient-input\"/>\n\n                        <select required placeholder=\"Select Ingredient Measure\"\n                        value={ingredient.id} onChange={this.handleChange(i)} name=\"id\">{this.props.reduxState.ingredientUnits.map(name => (<option key={name.id} value={name.id}>{name.name}</option>))}</select>\n                        {this.state.ingredients.length <= 1 ? (<></> ) : (<><button onClick={this.handleRemoveIngredient(i)}>Remove Ingredient {i+1}</button><br /></>) }\n                    </span>\n                ))}\n                <button type=\"button\" onClick={this.handleAddIngredient}>Add another Ingredient +</button>\n                <br /><br /><br />\n                <button onClick={this.saveIngredientState}>Save Ingredient List</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = reduxState => ({\n    reduxState,\n  });\n\nexport default connect(mapStateToProps)(AddARecipeIngredients);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass AddARecipeInstructions extends Component {\n\n    state = {\n        instructions: [{ instruction_details: '' }]\n    }\n\n    handleChange = (i) => (event) => {\n        console.log(event.target.value);\n        const newInstruction = this.state.instructions.map((instruction, si) => {\n            if ( i !== si ) return instruction;\n            return { ...instruction, [event.target.name]: event.target.value };\n        });\n        this.setState({ instructions: newInstruction });\n    }\n\n    handleAddInstruction = (event) => {\n        event.preventDefault();\n        this.setState({\n            instructions: this.state.instructions.concat([{\n                instruction_details: ''\n            }])\n        });\n    }\n\n    handleRemoveInstruction = (i) => (event) => {\n        event.preventDefault();\n        this.setState({\n            instructions: this.state.instructions.filter((s, si) => i !== si)\n        });\n    }\n\n    clearInputFields = () => {\n        this.setState(\n            this.instructions\n        );\n    }\n\n    saveInstructionState = (event) => {\n        event.preventDefault();\n        if(this.state.instructions[0].instruction_details !== ''){\n            this.props.dispatch({type: 'ADD_RECIPE_INSTRUCTIONS', payload: this.state});} else {\n                alert ('Please add instructions for your recipe!');\n            }\n        }\n\n    render() {\n        return (\n            <div>\n                {/* {JSON.stringify(this.state)}\n                Add your recipe instructions here. */}\n                <h1>Enter recipe instructions</h1>\n                <form onSubmit={this.submitInstructions} className=\"instruction-form\">\n                {this.state.instructions.map((instruction, i) => (\n                    <>\n\n                    {/* <textarea id=\"recipe-description\" name=\"description\"\n                          value={this.state.description} onChange={this.handleChange} class=\"question\" required autocomplete=\"off\" />\n                <label for=\"recipe-description\"><span>Please describe your recipe</span></label> */}\n                    <label for=\"recipe-instruction\" value={instruction.instruction_number}></label>\n                    <textarea type=\"text\" name=\"instruction_details\" \n                    id=\"recipe-instruction\" value={instruction.instruction_details}\n                    onChange={this.handleChange(i)} class=\"question\" required autocomplete=\"off\"/>\n                    <label for=\"recipe-instruction\"><span>Enter details of step {i+1}</span></label>\n                    {this.state.instructions.length <= 1 ? (<></> ) : (<button onClick={this.handleRemoveInstruction(i)}>Remove this Instruction -</button>) }\n                    </>\n                ))}<br /><br /><br />\n                <button onClick={this.handleAddInstruction}>Add another Instruction +</button>\n                <br /><br /><br />\n                <button onClick={this.saveInstructionState}>Save Instructions</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = reduxState => ({\n    reduxState,\n  });\n\nexport default connect(mapStateToProps)(AddARecipeInstructions);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport AddARecipeDescription from './AddARecipeDescription/AddARecipeDescription';\nimport AddARecipeIngredients from './AddARecipeIngredients/AddARecipeIngredients';\nimport AddARecipeInstructions from './AddARecipeInstructions/AddARecipeInstructions';\nimport '../AddARecipe/AddARecipe.css';\n\nclass AddARecipe extends Component {\n\n    state = {\n        recipe: {\n            title: '',\n            description: '',\n            ingredients: [],\n            instructions: []\n        }\n    }\n\n    componentDidMount() {\n        const action = {type: 'FETCH_RECIPES'};\n        this.props.dispatch(action);\n    }\n\n    submitNewRecipe = (event) => {\n        event.preventDefault();\n        console.log('this is the reduxState for recipes', this.props.reduxState.recipes);\n        if((this.props.reduxState.recipes.title && this.props.reduxState.recipes.description)  !== undefined && (this.props.reduxState.recipes.instructions && this.props.reduxState.recipes.ingredients)){\n        this.props.dispatch({ type: 'ADD_NEW_RECIPE', payload: this.props.reduxState.recipes});\n        this.props.history.push(`/success`);\n        }\n        else {alert('Please fill out all recipe fields!')}\n    }\n\n    render() {\n        return (\n            <div className=\"add-a-recipe\">\n                {/* {JSON.stringify(this.state)}<br/> */}\n                <AddARecipeDescription />\n                <AddARecipeIngredients />\n                <AddARecipeInstructions />\n                <br /><br /><br />\n                <button onClick={this.submitNewRecipe}>Save Recipe</button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = reduxState => ({\n    reduxState,\n  });\n\nexport default connect(mapStateToProps)(AddARecipe);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styles from './ManageUsers.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\n\nclass ManageUsers extends Component {\n\n    state = {\n        edit: true,\n        user: {\n          username: '',\n          first_name: '',\n          last_name: '',\n          access_level: 0,\n          id: 0,\n        },\n        updateUser: {\n          username: '',\n          first_name: '',\n          last_name: '',\n          access_level: 0,\n          id: 0,\n        },\n    }\n\n    componentDidMount(){\n        this.props.dispatch({type: 'FETCH_ALL_USERS'})\n    }\n\n    //handles the changes from the edit input field\n handleChange = (name) => (event) => {\n    console.log('handleChange', name, event.target.value,)\n    this.setState({\n      ...this.state,\n      updateUser: {...this.state.user, ...this.state.updateUser, [event.target.name]: event.target.value},\n    })\n  \n  console.log(this.state)\n }\n \n  //Gathers inputs and sends the PUT request to the database\n  handleSave = (event) => {\n    this.setState({ ...this.state,\n      updateUser: '',\n      user: '',\n    });\n    this.props.dispatch({type: 'EDIT_USER', payload: this.state.updateUser});\n    console.log(this.state.user);\n  }\n \n  //Toggles the edit button to a save button\n  handleEdit = (user) => () => {\n    this.setState({\n      ...this.state,\n      user: user,\n      updateUser: user,\n    });\n    console.log(this.state.user);\n  }\n\n  handleDelete = (user) => () => {\n    console.log('Clicked Delete button', user)\n    // alert('Sure about that?');\n    confirmAlert({\n      title: `Definitely want to delete ${user.username} from 막?`,\n      buttons: [\n          {\n              label: 'No, just kidding.',\n            //   onClick: () => alert('Click No')\n            },\n          {\n            label: `Yeah, get ${user.username} outta here!`,\n            onClick: () => {\n              this.props.dispatch({type: 'REMOVE_USER', payload: user.id})\n            }\n          },\n        ],\n        message: `This action is irreversible`,\n  })\n  }\n \n  //renders the edit/save button\n  renderEditButton = (user) => {\n    if(this.state.edit === true && this.state.user === user){\n      return (\n        <button className=\"borderless-btn\" onClick={this.handleSave}>\n        <FontAwesomeIcon icon=\"save\" />\n        </button>\n      );\n    }else{\n        return(\n          <button className=\"borderless-btn\" onClick={this.handleEdit(user)}>\n          <FontAwesomeIcon icon=\"edit\" />\n          </button>\n          \n      )\n    }\n  }\n\n    render() {\n        return (\n            <div className=\"manage-users\">\n              <h1>Manage Users</h1>\n                {this.props.reduxState.admin.users ? (<table className=\"admin-user-table\">\n                    <thead>\n                        <tr>\n                            <th>Username</th><th>First Name</th><th>Last Name</th><th title={\"Admin: Has full access to all features of Mak. Can manage recipes and users\\nContributor: Can add new recipes\\nRegistered User: Can add recipes to their personal recipe library\"}>Access Level</th><th>Edit User</th><th>Delete User</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                {this.props.reduxState.admin.users.map((user, index) => (\n                        <>\n                        <tr key={index}>\n                        {(this.state.edit === true && this.state.user !== user) ?\n                        (<><td>{user.username}</td><td>{user.first_name}</td><td>{user.last_name}</td>\n                        <td>{(user.access_level === 1) ? <td>Admin</td> : (user.access_level === 2) ? <td>Contributor</td> : (<td>Registered User</td>)}</td></>) : (<>\n                        <td><input className=\"user-input\" name=\"username\" placeholder={user.username} onChange={this.handleChange(\"username\")}/></td>\n                        <td><input className=\"user-input\" name=\"first_name\" placeholder={user.first_name} onChange={this.handleChange(\"first_name\")}/></td>\n                        <td><input className=\"user-input\" name=\"last_name\" placeholder={user.last_name} onChange={this.handleChange(\"last_name\")}/></td>\n                        <td><select className=\"user-input\" name=\"access_level\" value={this.state.updateUser.access_level} onChange={this.handleChange(\"access_level\")}>\n                          <option value=\"1\">Admin</option>\n                          <option value=\"2\">Contributor</option>\n                          <option value=\"3\">Registered User</option>\n                        </select></td></>)}<td>{this.renderEditButton(user)}</td><td><button className=\"borderless-btn\" onClick={this.handleDelete(user)}><FontAwesomeIcon icon=\"trash\" /></button></td>\n                        </tr>\n                        </>\n                    ))}\n                    </tbody>\n                </table>) : (<></>)}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = reduxState => ({\n    reduxState,\n  });\n\nexport default connect(mapStateToProps)(ManageUsers);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { confirmAlert } from 'react-confirm-alert';\nimport './ManageRecipes.css'\n\nclass ManageRecipes extends Component {\n\n    state = {\n        edit: true,\n        recipe: {\n          name: '',\n          description: '',\n          is_published: 0,\n          added_by: 0,\n          image: null,\n          id: 0,\n        },\n    }\n    \n    componentDidMount(){\n        this.props.dispatch({type: 'FETCH_ALL_USERS'})\n    }\n\n    handleEdit = (recipe) => () => {\n        this.setState({\n            ...this.state,\n            recipe: recipe,\n            updateRecipe: recipe,\n          });\n        console.log(recipe);\n    }\n\n  handleDelete = (recipe) => () => {\n    console.log('Clicked Delete button', recipe)\n    // alert('Sure about that?');\n    confirmAlert({\n      title: `Definitely want to delete ${recipe.name} from 막?`,\n      buttons: [\n          {\n              label: 'No, just kidding.',\n            //   onClick: () => alert('Click No')\n            },\n          {\n            label: `Yeah, get ${recipe.name} outta here!`,\n            onClick: () => {\n              this.props.dispatch({type: 'REMOVE_RECIPE', payload: recipe.id})\n            }\n          },\n        ],\n        message: `This action is irreversible`,\n  })\n  }\n\n  //renders the edit/save button\n  renderEditButton = (recipe) => {\n    if(this.state.edit === true && this.state.recipe === recipe){\n      return (\n        <button className=\"borderless-btn\" onClick={this.handleSave}>\n        <FontAwesomeIcon icon=\"save\" />\n        </button>\n      );\n    }else{\n        return(\n          <button className=\"borderless-btn\" onClick={this.handleEdit(recipe)}>\n          <FontAwesomeIcon icon=\"edit\" />\n          </button>\n          \n      )\n    }\n  }\n\n    render() {\n        return (\n            <div className=\"manage-recipes\">\n                <h1>Manage Recipes</h1>\n                {this.props.reduxState.admin.recipes ? (<table className=\"admin-recipe-table\">\n                    <thead>\n                        <tr>\n                            <th>Recipe Title</th><th>Published?</th><th>Added By</th><th>Edit Recipe</th><th>Delete Recipe</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                {this.props.reduxState.admin.recipes.map((recipe, index) => (\n                        <>\n                        <tr key={index}>\n                        <><td>{recipe.name}</td><td>{recipe.is_published === 1 ? (<>Yes</>) : (<>No</>)}</td>\n                        <td>{recipe.added_by}</td></><td>{this.renderEditButton(recipe)}</td><td><button className=\"borderless-btn\" onClick={this.handleDelete(recipe)}><FontAwesomeIcon icon=\"trash\" /></button></td></tr></>))}\n                    </tbody>\n                </table>) : (<></>)}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = reduxState => ({\n    reduxState,\n  });\n\nexport default connect(mapStateToProps)(ManageRecipes);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport './RecipeGallery.css';\n\nclass RecipeGallery extends Component {\n\n    state = {\n        recipe:{\n          path: '',\n          description: '',\n          likes: '',\n        },\n        recipeData: [ ],\n      }\n      \n      getRecipes = () => {\n        axios.get('/recipes').then( (response) => {\n          console.log(response.data);\n          this.setState({\n            recipeData: response.data\n            });\n          }).catch( error => {\n            console.log('There was an error retreiving the recipes', error);\n        })\n      }\n    \n      componentDidMount () {\n        this.getRecipes();\n      }\n\n      viewRecipe = (key) => (event) => {\n          this.props.dispatch({type: 'GET_RECIPE_VIEW', payload: {key: key, history: this.props.history}});\n    }\n          \n    \n\n    render() {\n        return (\n            <div className=\"recipe-wrap\">\n                {this.state.recipeData.map(recipe => (\n                    <div key={recipe.id} className=\"recipe-gallery-card\">\n                    <h1>{recipe.name}</h1>\n                    <p>{recipe.description}</p>\n                    <button key={recipe.id} alt={recipe.id} onClick={this.viewRecipe(recipe.id)}>View this recipe</button>\n                    </div>\n                ))}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = reduxState => ({\n    reduxState,\n  });\n\nexport default connect(mapStateToProps)(RecipeGallery);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './RecipePage.css';\n\nclass RecipePage extends Component {\n\n    addRecipeToUserLibrary = (id) => (event) => {\n            this.props.dispatch({type: 'ADD_RECIPE_TO_USER_LIBRARY', payload: {recipe_id: id, user_id: this.props.reduxState.user.user_id}});\n            this.props.history.push(`/user`);\n    }\n\n    // handleSubmit = (user) => {\n    //     saveUser(user).then(() =>\n    //       this.props.history.push('/dashboard')\n    //     ))\n    //   }\n\n    render() {\n        return (\n            <div className=\"recipe\">\n                    <div className=\"add-recipe-btn-div\">\n                    {this.props.reduxState.user.user_id ? <button className=\"add-recipe-btn\" onClick={this.addRecipeToUserLibrary(this.props.reduxState.recipes.recipe[0].id)}>Add this recipe to your library</button> : <></>}\n                    </div>\n                <div className=\"recipe-name-ingredients\">\n                {this.props.reduxState.recipes.recipe.map(recipe => (\n                    <div className=\"recipe-name\">\n                    <h1>{recipe.name}</h1>\n                    <p>{recipe.description}</p>\n                    </div>\n                ))}\n                    <div className=\"recipe-ingredients\">\n                    <table><thead><tr><th>Ingredient</th><th>Quantity</th><th>Measure</th></tr></thead><tbody>\n                    {this.props.reduxState.recipes.ingredients.map((recipe, index) => (\n                        <>\n                        <tr key={index}>\n                        <td>{recipe.ingredient_name}</td><td>{recipe.ingredient_quantity}</td><td>{recipe.ingredient_measure}</td>\n                        </tr>\n                        </>\n                    ))}\n                    {/* <tr><td><button>Calculate your own</button></td></tr> */}\n                    </tbody>\n                    </table>\n                    </div>\n                    </div>\n                    <div className=\"recipe-instructions\">\n                    <h1 id=\"brew-inst-title\">{this.props.reduxState.recipes.recipe[0].name}<br/>Brewing Instructions</h1>\n                    {this.props.reduxState.recipes.instructions.map(recipe => (\n                    <>\n                    <span className=\"ins-init\"><h1>{recipe.instruction_number}</h1></span><span className=\"ins-init\"><p>{recipe.instruction_details}</p></span>\n                    </>\n                ))}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = reduxState => ({\n    reduxState,\n  });\n\nexport default connect(mapStateToProps)(RecipePage);","import React, { Component } from 'react';\n\nclass SuccessPage extends Component {\n    render() {\n        return (\n            <div>\n                Yay! Your recipe has been added to the library!\n            </div>\n        );\n    }\n}\n\nexport default SuccessPage;","import React, {Component} from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\n\nimport {connect} from 'react-redux';\n\nimport Nav from '../Nav/Nav';\nimport Footer from '../Footer/Footer';\n\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute'\n\nimport AboutPage from '../AboutPage/AboutPage';\nimport UserPage from '../UserPage/UserPage';\nimport InfoPage from '../InfoPage/InfoPage';\nimport HomePage from '../HomePage/HomePage';\nimport AddARecipe from '../AddARecipe/AddARecipe';\nimport ManageUsers from '../ManageUsers/ManageUsers';\nimport ManageRecipes from '../ManageRecipes/ManageRecipes';\nimport RecipeGallery from '../RecipeGallery/RecipeGallery';\nimport RecipePage from '../RecipePage/RecipePage';\nimport SuccessPage from '../SuccessPage/SuccessPage';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye, faTrash, faEdit, faSave } from '@fortawesome/free-solid-svg-icons';\nimport './App.css';\n\nlibrary.add(faEye, faTrash, faEdit, faSave);\n\nclass App extends Component {\n  componentDidMount () {\n    this.props.dispatch({type: 'FETCH_USER'});\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Nav className=\"nav\" />\n          <Switch>\n            {/* Visiting localhost:3000 will redirect to localhost:3000/home */}\n            {/* <Redirect exact from=\"/\" to=\"/home\" /> */}\n            {/* Visiting localhost:3000/home or /about will show the following pages.\n            These routes anyone can see, no login necessary */}\n            <Route\n              exact\n              path=\"/\"\n              component={RecipeGallery}\n            />\n            <Route\n              exact\n              path=\"/about\"\n              component={AboutPage}\n            />\n            <Route\n              path=\"/recipe/:id\"\n              component={RecipePage}\n            />\n            {/* For protected routes, the view could show one of several things on the same route.\n            Visiting localhost:3000/home will show the UserPage if the user is logged in.\n            If the user is not logged in, the ProtectedRoute will show the 'Login' or 'Register' page.\n            Even though it seems like they are different pages, the user is always on localhost:3000/home */}\n            <ProtectedRoute\n              exact\n              path=\"/success\"\n              component={SuccessPage}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/user\"\n              component={UserPage}\n            />\n            {/* This works the same as the other protected route, except that if the user is logged in,\n            they will see the info page instead. */}\n            <ProtectedRoute\n              exact\n              path=\"/info\"\n              component={InfoPage}\n            />\n            {/* This works the same as the other protected route, except that if the user is logged in,\n            they will see the add a recipe page. */}\n            {(this.props.user.access_level <= 2) ? (<ProtectedRoute\n              exact\n              path=\"/add-a-recipe\"\n              component={AddARecipe}\n            />) : (<></>)}\n            {(this.props.user.access_level === 1) ? (<ProtectedRoute\n              exact\n              path=\"/admin/manage-users\"\n              component={ManageUsers}\n            />) : (<></>)}\n            {(this.props.user.access_level === 1) ? (<ProtectedRoute\n              exact\n              path=\"/admin/manage-recipes\"\n              component={ManageRecipes}\n            />) : (<></>)}\n            {/* If none of the other routes matched, we will show a 404. */}\n            <Route render={() => <h1>404</h1>} />\n          </Switch>\n          <Footer />\n        </div>\n      </Router>\n  )}\n}\nconst mapStateToProps = state => ({\n  user: state.user,\n  access_level: state.user.access_level,\n});\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\nimport rootReducer from './redux/reducers'; // imports ./redux/reducers/index.js\nimport rootSaga from './redux/sagas'; // imports ./redux/sagas/index.js\n\nimport App from './components/App/App';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if your in development mode\nconst middlewareList = process.env.NODE_ENV === 'development' ?\n  [sagaMiddleware, logger] :\n  [sagaMiddleware];\n\nconst store = createStore(\n  // tells the saga middleware to use the rootReducer\n  // rootSaga contains all of our other reducers\n  rootReducer,\n  // adds all middleware to our project including saga and logger\n  applyMiddleware(...middlewareList),\n);\n\n// tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('react-root'),\n);\n"],"sourceRoot":""}